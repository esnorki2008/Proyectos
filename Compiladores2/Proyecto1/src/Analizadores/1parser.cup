package Analizadores; // Paquete
import java_cup.runtime.*;
import java.util.ArrayList;
import Arbol.*;

parser code
{:  
    

    public String salida = "" ; 
    public Instruccion Raiz;   
    public void syntax_error(Symbol s)
    {
         

        System.err.println("El analizador se recupero tras el error\nError en la Línea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "
        +s.value + " no reconocido." );        
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("El analizador No se recupero tras el error\nError en la Línea " + (s.right+1)+ "Columna "+(s.left+1)+". Identificador " +
        s.value + " no reconocido.");            
    }
    private int A(String S){

        return   Integer.parseInt(S);
    }

    public void setSalida(String cadena)
    {
        salida = cadena;
    }
:}


/*Terminales*/

terminal String entero,decimal,cadena,booleano,id,caracter, puntocom;
terminal String suma, resta, multi, div, para, parc,interro;

terminal String may,men,admira,igual,doblepunto;
terminal String punto,ifv,and,or,llaa,llac,cora,corc,menorigual,mayorigual,diferente,igualdoble;
terminal String elses,coma,potencia,modular,suitc,casep,defaultp,breakp,whilep,dop,forp,continuep,returnp,functionpp,inp,flecha;








/*
* Aquí están los no terminales
*/
non terminal Instruccion INICIO,LLAMADO;
non terminal Instruccion CUERPO,INSTR,BLOQUE,ASIGNACION,DECLA,TERNARIO,SI;
non terminal Instruccion VALOR,SUITCH,CUERPOSUITCH,MIENTRAS,HACERMIENTRAS,PARACICLO,TRANS;
non terminal Instruccion FUNCION,LISTAPARAM,FUNCIONP,LISTAVAL,RETORNO;

/* Precedencia */

precedence left or;
precedence left and;
precedence left igualdoble,diferente,men,may,menorigual,mayorigual;
precedence left suma,resta;
precedence left div,multi,modular;
precedence left admira,potencia;


/* ­­­­­­­­­­­­­­ Definición de la gramatica  ­­­­­­­­­­­ */
start with INICIO; // Inicial
////////PAGINA 1
INICIO::= CUERPO:a{:RESULT=a; Raiz=a;:};
CUERPO::=CUERPO:a INSTR:b{:RESULT=a; ((Cuerpo)RESULT).Agregar(b);:}
    |INSTR:a{: RESULT=new Cuerpo();  ((Cuerpo)RESULT).Agregar(a);:}
;    
INSTR::=BLOQUE:a {:RESULT=a;:}
    |ASIGNACION:a puntocom {:RESULT=a;:} 
    |TERNARIO:a {:RESULT=a;:}
    |SI:a {:RESULT=a;:}
    |SUITCH:a {:RESULT=a;:}
    |MIENTRAS:a {:RESULT=a;:}
    |HACERMIENTRAS:a {:RESULT=a;:}
    |PARACICLO:a {:RESULT=a;:}
    |TRANS:a {:RESULT=a;:}
    |LLAMADO:a {:RESULT=a;:}
    ;

LLAMADO::=id:a para LISTAVAL:b parc puntocom{:RESULT=new LlamarFuncion(a,b);:}
;

BLOQUE::=llaa CUERPO:a llac{:RESULT=new Bloque(a);:}
;

ASIGNACION::=id:a DECLA:b{:RESULT=new Asignacion(a,b);:}
;

DECLA::= igual VALOR:a{:RESULT=a;:}
    |{:RESULT=null;:}
    ;



TERNARIO::= VALOR:a interro INSTR:b doblepunto INSTR:c{:RESULT= new Ternario(a,b,c);:};

SI::= ifv para VALOR:a parc llaa CUERPO:b llac{:RESULT = new Si(a,b,null);:}
    |ifv para VALOR:a parc llaa CUERPO:b llac elses SI:c{:RESULT = new Si(a,b,c);:}
    ;




//Pagina2    

VALOR::=VALOR:a suma:b VALOR:c {: RESULT=new Valor(b,a,c); :} //1
    |VALOR:a resta:b VALOR:c {: RESULT=new Valor(b,a,c); :}
    |VALOR:a multi:b VALOR:c {: RESULT=new Valor(b,a,c); :}
    |VALOR:a div:b VALOR:c {: RESULT=new Valor(b,a,c); :}
    |VALOR:a potencia:b VALOR:c {: RESULT=new Valor(b,a,c); :}
    |VALOR:a modular:b VALOR:c {: RESULT=new Valor(b,a,c); :}
    |resta:a VALOR:b {: RESULT=new Valor(a,b); :}
    |suma:a VALOR:b{: RESULT=new Valor(a,b); :}
    |id:a para LISTAVAL:b parc {: RESULT=new Valor("valorfuncion",b,a); :}
    |id:a{: RESULT=new Valor("var",a); :}
    |VALOR:a igualdoble:b VALOR:c{: RESULT=new Valor(b,a,c); :} 
    |VALOR:a diferente:b VALOR:c{: RESULT=new Valor(b,a,c); :} 
    |VALOR:a mayorigual:b VALOR:c{: RESULT=new Valor(b,a,c); :} 
    |VALOR:a menorigual:b VALOR:c{: RESULT=new Valor(b,a,c); :} 
    |VALOR:a may:b VALOR:c{: RESULT=new Valor(b,a,c); :} 
    |VALOR:a men:b VALOR:c{: RESULT=new Valor(b,a,c); :} 
    |admira:a VALOR:b{: RESULT=new Valor(a,b); :}
    |VALOR:a or:b VALOR:c{: RESULT=new Valor(b,a,c); :}
    |VALOR:a and:b VALOR:c{: RESULT=new Valor(b,a,c); :}
    |caracter:a{: RESULT=new Valor("char",a); :}
    |FUNCION:a{: RESULT=new Valor("declafuncion",a); :}
    |entero:a{: RESULT=new Valor("entero",a); :}
    |cadena:a{: RESULT=new Valor("cadena",a); :}
    |booleano:a{: RESULT=new Valor("booleano",a); :}
    |decimal:a{: RESULT=new Valor("decimal",a); :}
;
//PAGINA 3
SUITCH::= suitc para VALOR:a parc llaa CUERPOSUITCH:b llac{:b.Comparar(a);RESULT=b;:}
;

CUERPOSUITCH::=CUERPOSUITCH casep VALOR doblepunto CUERPO TRANS
    |CUERPOSUITCH defaultp  doblepunto CUERPO TRANS
    |casep VALOR doblepunto CUERPO TRANS
    |defaultp  doblepunto CUERPO TRANS
;



MIENTRAS::= whilep para VALOR parc llaa CUERPO llac
;

HACERMIENTRAS::=dop llaa CUERPO llac para VALOR parc puntocom
;

PARACICLO::= forp para id inp VALOR parc llaa CUERPO llac
;
TRANS::=breakp puntocom
    |continuep puntocom
    |returnp RETORNO puntocom
;
RETORNO::=VALOR
    |
;
FUNCION::=functionpp para LISTAPARAM parc llaa CUERPO llac
    |para LISTAPARAM parc FUNCIONP
;
LISTAPARAM::=LISTAPARAM coma ASIGNACION
    |ASIGNACION
;
FUNCIONP::=LISTAPARAM parc flecha llaa CUERPO llac
    |
;

LISTAVAL::=LISTAVAL coma VALOR
    |VALOR
;
