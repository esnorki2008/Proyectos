
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightINTERROGACIONDOBLEPUNTOleftORleftANDleftORBleftXORBleftANDBleftIGUALDOBLEDIFERENTEleftMAYORMAYORIGUALMENORMENORIGUALleftSHIFTISHIFTDleftMASMENOSleftPORDIVIDIDOMODrightUMENOSUMASNOTNOTBUANDMASDOBLEMENOSDOBLECASTINTCASTDOUBLECASTFLOATCASTCHARAND ANDB ANDIGUAL BREAK CADENA CASE CASTCHAR CASTDOUBLE CASTFLOAT CASTINT CHAR COMA CONTINUE CORA CORC DECIMAL DEFAULT DIFERENTE DIVIDIDO DIVIGUAL DO DOBLEPUNTO DOUBLE ELSE ENTERO FLOAT FOR GOTO IDENTIFICADOR IF IGUAL IGUALDOBLE INT INTERROGACION LLAA LLAC MAS MASDOBLE MASIGUAL MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MENOSDOBLE MENOSIGUAL MOD MODIGUAL NOT NOTB OR ORB ORIGUAL PARA PARC POR PORIGUAL PRINTF PUNTO PUNTOCOMA RETURN SCANF SHIFTD SHIFTDIGUAL SHIFTI SHIFTIIGUAL STRUCT SWITCH WHILE XORB XORIGUALinicio    : lista_metodoslista_metodos : lista_metodos metodoslista_metodos :  metodosmetodos : instruccionmetodos : STRUCT IDENTIFICADOR LLAA muhco_decla_struct LLACmuhco_decla_struct : muhco_decla_struct decla_structmuhco_decla_struct : decla_structdecla_struct : tipo mdecla  PUNTOCOMAmetodos : tipo IDENTIFICADOR PARA parametros PARC instruccionparametros : parametros COMA tipo IDENTIFICADORparametros : tipo IDENTIFICADORparametros : instrucciones : instrucciones instruccion instrucciones : instruccion instruccion : IDENTIFICADOR DOBLEPUNTOinstruccion : GOTO IDENTIFICADOR PUNTOCOMAinstruccion : LLAA  instrucciones LLACinstruccion : LLAA   LLACinstruccion : instruccion_cicloinstruccion : instruccion_abiertainstruccion : instruccion_llamar_metodoinstruccion_llamar_metodo : BREAK  PUNTOCOMAinstruccion_llamar_metodo : CONTINUE  PUNTOCOMAinstruccion_llamar_metodo : RETURN expresiones PUNTOCOMAinstruccion_llamar_metodo : IDENTIFICADOR PARA listado_parametros PARC PUNTOCOMAinstruccion_llamar_metodo : PRINTF PARA listado_parametros PARC PUNTOCOMAlistado_parametros : listado_parametros COMA expresioneslistado_parametros : expresioneslistado_parametros : instruccion_ciclo : WHILE PARA expresiones PARC   instruccion instruccion_ciclo : DO  instruccion  WHILE PARA expresiones PARC PUNTOCOMAinstruccion_ciclo : variacionesvariaciones : IDENTIFICADOR MASDOBLEvariaciones : IDENTIFICADOR MENOSDOBLEinstruccion_ciclo : FOR PARA instruccion  expresiones PUNTOCOMA   finfor PARC instruccionfinfor : instruccionfinfor : instruccion_abierta : IF PARA expresiones PARC instruccioninstruccion_abierta :  IF PARA expresiones PARC instruccion ELSE instruccioninstruccion_abierta :  SWITCH PARA expresiones PARC LLAA switch_corpo LLACswitch_corpo : switch_corpo switch_corpo_salidaswitch_corpo : switch_corpo_salidaswitch_corpo_salida : CASE expresiones DOBLEPUNTO instruccionesswitch_corpo_salida : DEFAULT DOBLEPUNTO instruccionestipo : CHAR\n            | INT\n            | DOUBLE\n            | FLOATcorche : corche CORA expresiones CORCcorche : instruccion : STRUCT IDENTIFICADOR IDENTIFICADOR corche PUNTOCOMAinstruccion : IDENTIFICADOR  PUNTO  IDENTIFICADOR m_igual expresiones PUNTOCOMAinstruccion : mdecla corche arre_str_val m_igual expresiones PUNTOCOMA arre_str_val :   PUNTO IDENTIFICADOR  arre_str_val : decla_con : tipo mdecla  IGUAL expresiones masinde  PUNTOCOMAinstruccion : def_decla def_decla : decla_con\n                | decla_epsi decla_epsi : tipo mdecla  PUNTOCOMAdecla_epsi : tipo mdecla corchelle pob_val PUNTOCOMApob_val : IGUAL LLAA val_arri LLACpob_val : IGUAL expresionespob_val : val_arri : val_arri COMA expresionesval_arri : expresionesmasinde : masinde COMA mdecla IGUAL expresiones   masinde : m_igual : IGUAL\n            | MASIGUAL\n            | MENOSIGUAL\n            | PORIGUAL\n            | DIVIGUAL\n            | MODIGUAL\n            | SHIFTIIGUAL\n            | SHIFTDIGUAL\n            | ANDIGUAL\n            | XORIGUAL\n            | ORIGUALmdecla : mdecla COMA IDENTIFICADORmdecla : IDENTIFICADORexpresiones : expresiones OR expresiones\n                    | expresiones AND expresiones\n\n                    | expresiones ORB expresiones\n                    | expresiones XORB expresiones\n                    | expresiones ANDB expresiones\n\n                    | expresiones IGUALDOBLE expresiones\n                    | expresiones DIFERENTE expresiones\n\n\n                    | expresiones MAYOR expresiones\n                    | expresiones MAYORIGUAL expresiones\n                    | expresiones MENOR expresiones\n                    | expresiones MENORIGUAL expresiones\n\n                    | expresiones SHIFTI expresiones\n                    | expresiones SHIFTD expresiones\n\n                    | expresiones MAS expresiones\n                    | expresiones MENOS expresiones\n\n                    | expresiones POR expresiones\n                    | expresiones MOD expresiones\n                    | expresiones DIVIDIDO expresionesexpresiones : expresiones INTERROGACION expresiones DOBLEPUNTO expresionesexpresiones : MENOS expresiones %prec UMENOS\n                    | MAS expresiones %prec UMAS\n                    | NOTB expresiones\n                    | ANDB expresiones %prec UAND\n                    | NOT expresiones expresiones : valorexpresiones : PARA expresiones PARCvalor : ENTEROvalor : DECIMALvalor : CADENAvalor : IDENTIFICADORcorchelle : corchelle CORA expresiones CORCcorchelle : CORA expresiones CORCvalor : IDENTIFICADOR corchelleexpresiones : IDENTIFICADOR MASDOBLEexpresiones : IDENTIFICADOR MENOSDOBLEvalor : IDENTIFICADOR  PUNTO IDENTIFICADORvalor : IDENTIFICADOR corchelle PUNTO IDENTIFICADORvalor : CASTINT expresionesvalor : CASTCHAR expresionesvalor : CASTFLOAT expresionesvalor : CASTDOUBLE expresionesvalor : SCANF PARA PARCvalor : IDENTIFICADOR PARA listado_parametros PARC'
    
_lr_action_items = {'STRUCT':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[5,5,-3,-4,41,-19,-20,-21,-57,41,-32,-58,-59,-2,-15,-33,-34,41,-18,-14,41,-22,-23,-17,-13,-60,-16,-24,41,41,-51,-5,-25,41,-61,-30,41,-38,-26,-52,-9,-56,-53,41,-31,41,-39,-40,41,-35,41,41,41,]),'IDENTIFICADOR':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,20,21,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,50,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,79,80,83,84,86,87,89,90,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,126,127,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,156,157,159,162,163,165,187,192,193,197,200,203,205,210,212,213,215,218,220,221,222,223,224,228,232,235,241,242,243,244,245,248,249,251,252,253,255,],[6,6,-3,-4,32,6,43,45,-19,-20,-21,-57,-45,-46,-47,-48,6,-32,63,-58,-59,-2,73,-15,75,63,-33,-34,6,-18,-14,80,81,91,63,6,63,63,-22,-23,63,63,63,63,63,63,63,63,63,63,63,-17,-13,73,63,-60,63,-16,63,161,63,-24,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,188,63,81,63,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,63,199,63,63,63,6,63,6,216,-51,-5,-25,6,-61,63,-30,6,-38,63,-26,-52,-9,238,-56,81,-53,6,63,63,-31,6,-39,-40,6,63,-35,6,6,6,]),'GOTO':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[9,9,-3,-4,9,-19,-20,-21,-57,9,-32,-58,-59,-2,-15,-33,-34,9,-18,-14,9,-22,-23,-17,-13,-60,-16,-24,9,9,-51,-5,-25,9,-61,-30,9,-38,-26,-52,-9,-56,-53,9,-31,9,-39,-40,9,-35,9,9,9,]),'LLAA':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,32,33,36,37,38,39,40,50,53,54,78,79,84,87,97,157,162,165,166,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[7,7,-3,-4,7,-19,-20,-21,-57,7,-32,-58,-59,-2,74,-15,-33,-34,7,-18,-14,7,-22,-23,-17,-13,-60,-16,-24,205,7,7,214,-51,-5,-25,7,-61,-30,7,-38,-26,-52,-9,-56,-53,7,-31,7,-39,-40,7,-35,7,7,7,]),'CHAR':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,74,78,79,82,84,87,97,135,136,162,165,192,193,194,197,200,201,203,210,212,213,218,219,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[15,15,-3,-4,15,-19,-20,-21,-57,15,-32,-58,-59,-2,-15,-33,-34,15,-18,-14,15,-22,-23,15,-17,-13,15,-60,-16,-24,15,-7,15,15,-51,-5,-6,-25,15,15,-61,-30,15,-38,-26,-8,-52,-9,-56,-53,15,-31,15,-39,-40,15,-35,15,15,15,]),'INT':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,74,78,79,82,84,87,97,135,136,162,165,192,193,194,197,200,201,203,210,212,213,218,219,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[16,16,-3,-4,16,-19,-20,-21,-57,16,-32,-58,-59,-2,-15,-33,-34,16,-18,-14,16,-22,-23,16,-17,-13,16,-60,-16,-24,16,-7,16,16,-51,-5,-6,-25,16,16,-61,-30,16,-38,-26,-8,-52,-9,-56,-53,16,-31,16,-39,-40,16,-35,16,16,16,]),'DOUBLE':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,74,78,79,82,84,87,97,135,136,162,165,192,193,194,197,200,201,203,210,212,213,218,219,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[17,17,-3,-4,17,-19,-20,-21,-57,17,-32,-58,-59,-2,-15,-33,-34,17,-18,-14,17,-22,-23,17,-17,-13,17,-60,-16,-24,17,-7,17,17,-51,-5,-6,-25,17,17,-61,-30,17,-38,-26,-8,-52,-9,-56,-53,17,-31,17,-39,-40,17,-35,17,17,17,]),'FLOAT':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,74,78,79,82,84,87,97,135,136,162,165,192,193,194,197,200,201,203,210,212,213,218,219,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[18,18,-3,-4,18,-19,-20,-21,-57,18,-32,-58,-59,-2,-15,-33,-34,18,-18,-14,18,-22,-23,18,-17,-13,18,-60,-16,-24,18,-7,18,18,-51,-5,-6,-25,18,18,-61,-30,18,-38,-26,-8,-52,-9,-56,-53,18,-31,18,-39,-40,18,-35,18,18,18,]),'WHILE':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,49,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[19,19,-3,-4,19,-19,-20,-21,-57,19,-32,-58,-59,-2,-15,-33,-34,19,-18,-14,93,19,-22,-23,-17,-13,-60,-16,-24,19,19,-51,-5,-25,19,-61,-30,19,-38,-26,-52,-9,-56,-53,19,-31,19,-39,-40,19,-35,19,19,19,]),'DO':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[20,20,-3,-4,20,-19,-20,-21,-57,20,-32,-58,-59,-2,-15,-33,-34,20,-18,-14,20,-22,-23,-17,-13,-60,-16,-24,20,20,-51,-5,-25,20,-61,-30,20,-38,-26,-52,-9,-56,-53,20,-31,20,-39,-40,20,-35,20,20,20,]),'FOR':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[22,22,-3,-4,22,-19,-20,-21,-57,22,-32,-58,-59,-2,-15,-33,-34,22,-18,-14,22,-22,-23,-17,-13,-60,-16,-24,22,22,-51,-5,-25,22,-61,-30,22,-38,-26,-52,-9,-56,-53,22,-31,22,-39,-40,22,-35,22,22,22,]),'IF':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[23,23,-3,-4,23,-19,-20,-21,-57,23,-32,-58,-59,-2,-15,-33,-34,23,-18,-14,23,-22,-23,-17,-13,-60,-16,-24,23,23,-51,-5,-25,23,-61,-30,23,-38,-26,-52,-9,-56,-53,23,-31,23,-39,-40,23,-35,23,23,23,]),'SWITCH':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[24,24,-3,-4,24,-19,-20,-21,-57,24,-32,-58,-59,-2,-15,-33,-34,24,-18,-14,24,-22,-23,-17,-13,-60,-16,-24,24,24,-51,-5,-25,24,-61,-30,24,-38,-26,-52,-9,-56,-53,24,-31,24,-39,-40,24,-35,24,24,24,]),'BREAK':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[25,25,-3,-4,25,-19,-20,-21,-57,25,-32,-58,-59,-2,-15,-33,-34,25,-18,-14,25,-22,-23,-17,-13,-60,-16,-24,25,25,-51,-5,-25,25,-61,-30,25,-38,-26,-52,-9,-56,-53,25,-31,25,-39,-40,25,-35,25,25,25,]),'CONTINUE':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[26,26,-3,-4,26,-19,-20,-21,-57,26,-32,-58,-59,-2,-15,-33,-34,26,-18,-14,26,-22,-23,-17,-13,-60,-16,-24,26,26,-51,-5,-25,26,-61,-30,26,-38,-26,-52,-9,-56,-53,26,-31,26,-39,-40,26,-35,26,26,26,]),'RETURN':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[27,27,-3,-4,27,-19,-20,-21,-57,27,-32,-58,-59,-2,-15,-33,-34,27,-18,-14,27,-22,-23,-17,-13,-60,-16,-24,27,27,-51,-5,-25,27,-61,-30,27,-38,-26,-52,-9,-56,-53,27,-31,27,-39,-40,27,-35,27,27,27,]),'PRINTF':([0,2,3,4,7,10,11,12,14,20,21,29,30,31,33,36,37,38,39,40,50,53,54,78,79,84,87,97,162,165,192,193,197,200,203,210,212,213,218,220,221,223,228,232,242,243,244,245,248,251,252,253,255,],[28,28,-3,-4,28,-19,-20,-21,-57,28,-32,-58,-59,-2,-15,-33,-34,28,-18,-14,28,-22,-23,-17,-13,-60,-16,-24,28,28,-51,-5,-25,28,-61,-30,28,-38,-26,-52,-9,-56,-53,28,-31,28,-39,-40,28,-35,28,28,28,]),'$end':([1,2,3,4,10,11,12,14,21,29,30,31,33,36,37,39,53,54,78,84,87,97,192,193,197,203,210,213,218,220,221,223,228,242,244,245,251,],[0,-1,-3,-4,-19,-20,-21,-57,-32,-58,-59,-2,-15,-33,-34,-18,-22,-23,-17,-60,-16,-24,-51,-5,-25,-61,-30,-38,-26,-52,-9,-56,-53,-31,-39,-40,-35,]),'DOBLEPUNTO':([6,61,63,64,65,66,117,118,119,120,121,123,124,125,128,129,130,131,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,207,216,217,225,236,237,247,],[33,-106,-111,-108,-109,-110,-104,-102,-101,-103,-105,-115,-116,-114,-119,-120,-121,-122,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,215,-107,-117,-123,-113,-118,-124,-112,248,-100,252,]),'PUNTO':([6,13,46,63,91,125,207,209,225,],[34,-50,90,126,-80,187,-113,-49,-112,]),'PARA':([6,10,11,12,14,19,21,22,23,24,27,28,29,30,33,35,36,37,39,43,48,51,52,53,54,56,57,58,59,60,62,63,67,68,69,70,71,72,78,83,84,86,87,89,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[35,-19,-20,-21,-57,48,-32,50,51,52,62,72,-58,-59,-15,62,-33,-34,-18,82,62,62,62,-22,-23,62,62,62,62,62,62,127,62,62,62,62,132,62,-17,62,-60,62,-16,62,163,62,-24,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,62,62,62,62,62,-51,-25,-61,62,-30,-38,62,-26,-52,-56,-53,62,62,-31,-39,-40,62,-35,]),'COMA':([6,13,35,43,44,61,63,64,65,66,72,76,77,81,82,91,117,118,119,120,121,123,124,125,127,128,129,130,131,133,153,154,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,189,190,195,198,199,202,207,216,217,225,226,227,237,238,239,250,254,],[-81,47,-29,-81,47,-106,-111,-108,-109,-110,-29,151,-28,-81,-12,-80,-104,-102,-101,-103,-105,-115,-116,-114,-29,-119,-120,-121,-122,151,201,-68,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-107,-117,151,-123,47,-27,-11,224,-113,-118,-124,-112,241,-66,-100,-10,47,-65,-67,]),'CORA':([6,13,43,44,46,63,73,81,85,91,125,134,207,209,225,],[-81,-50,-81,86,89,86,-50,-81,156,-80,156,89,-113,-49,-112,]),'IGUAL':([6,13,43,44,46,75,81,85,88,91,161,207,209,225,239,],[-81,-50,-81,83,-55,139,-81,157,139,-80,-54,-113,-49,-112,249,]),'MASIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,140,140,-80,-54,-49,]),'MENOSIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,141,141,-80,-54,-49,]),'PORIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,142,142,-80,-54,-49,]),'DIVIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,143,143,-80,-54,-49,]),'MODIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,144,144,-80,-54,-49,]),'SHIFTIIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,145,145,-80,-54,-49,]),'SHIFTDIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,146,146,-80,-54,-49,]),'ANDIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,147,147,-80,-54,-49,]),'XORIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,148,148,-80,-54,-49,]),'ORIGUAL':([6,13,46,75,88,91,161,209,],[-81,-50,-55,149,149,-80,-54,-49,]),'MASDOBLE':([6,63,],[36,123,]),'MENOSDOBLE':([6,63,],[37,124,]),'LLAC':([7,10,11,12,14,21,29,30,33,36,37,38,39,40,53,54,61,63,64,65,66,78,79,84,87,97,117,118,119,120,121,123,124,125,128,129,130,131,135,136,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,190,192,194,197,203,207,210,213,216,217,218,219,220,223,225,226,227,228,233,234,237,242,244,245,246,250,251,253,255,],[39,-19,-20,-21,-57,-32,-58,-59,-15,-33,-34,78,-18,-14,-22,-23,-106,-111,-108,-109,-110,-17,-13,-60,-16,-24,-104,-102,-101,-103,-105,-115,-116,-114,-119,-120,-121,-122,193,-7,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-107,-117,-123,-51,-6,-25,-61,-113,-30,-38,-118,-124,-26,-8,-52,-56,-112,240,-66,-53,245,-42,-100,-31,-39,-40,-41,-65,-35,-44,-43,]),'MENOS':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,78,83,84,86,87,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,138,139,140,141,142,143,144,145,146,147,148,149,151,154,156,157,158,159,160,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,192,196,197,198,203,204,205,206,207,208,210,211,213,215,216,217,218,220,223,225,227,228,235,237,241,242,244,245,247,249,250,251,254,],[-19,-20,-21,-57,-32,58,-58,-59,-15,58,-33,-34,-18,58,58,58,-22,-23,112,58,58,58,58,58,-106,58,-111,-108,-109,-110,58,58,58,58,58,112,-17,58,-60,58,-16,58,112,58,112,112,-24,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-104,-102,-101,-103,-105,112,-115,-116,-114,58,-119,-120,-121,-122,58,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,58,112,58,58,112,58,112,58,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-95,-96,-97,-98,-99,112,-107,-117,-123,-51,112,-25,112,-61,112,58,112,-113,112,-30,112,-38,58,-118,-124,-26,-52,-56,-112,112,-53,58,112,58,-31,-39,-40,112,58,112,-35,112,]),'MAS':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,78,83,84,86,87,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,138,139,140,141,142,143,144,145,146,147,148,149,151,154,156,157,158,159,160,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,192,196,197,198,203,204,205,206,207,208,210,211,213,215,216,217,218,220,223,225,227,228,235,237,241,242,244,245,247,249,250,251,254,],[-19,-20,-21,-57,-32,57,-58,-59,-15,57,-33,-34,-18,57,57,57,-22,-23,111,57,57,57,57,57,-106,57,-111,-108,-109,-110,57,57,57,57,57,111,-17,57,-60,57,-16,57,111,57,111,111,-24,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-104,-102,-101,-103,-105,111,-115,-116,-114,57,-119,-120,-121,-122,57,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,57,111,57,57,111,57,111,57,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-95,-96,-97,-98,-99,111,-107,-117,-123,-51,111,-25,111,-61,111,57,111,-113,111,-30,111,-38,57,-118,-124,-26,-52,-56,-112,111,-53,57,111,57,-31,-39,-40,111,57,111,-35,111,]),'NOTB':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,59,-58,-59,-15,59,-33,-34,-18,59,59,59,-22,-23,59,59,59,59,59,59,59,59,59,59,59,-17,59,-60,59,-16,59,59,-24,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,59,59,59,59,59,-51,-25,-61,59,-30,-38,59,-26,-52,-56,-53,59,59,-31,-39,-40,59,-35,]),'ANDB':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,78,83,84,86,87,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,138,139,140,141,142,143,144,145,146,147,148,149,151,154,156,157,158,159,160,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,192,196,197,198,203,204,205,206,207,208,210,211,213,215,216,217,218,220,223,225,227,228,235,237,241,242,244,245,247,249,250,251,254,],[-19,-20,-21,-57,-32,56,-58,-59,-15,56,-33,-34,-18,56,56,56,-22,-23,102,56,56,56,56,56,-106,56,-111,-108,-109,-110,56,56,56,56,56,102,-17,56,-60,56,-16,56,102,56,102,102,-24,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-104,-102,-101,-103,-105,102,-115,-116,-114,56,-119,-120,-121,-122,56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,56,102,56,56,102,56,102,56,102,102,102,102,102,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,102,-107,-117,-123,-51,102,-25,102,-61,102,56,102,-113,102,-30,102,-38,56,-118,-124,-26,-52,-56,-112,102,-53,56,102,56,-31,-39,-40,102,56,102,-35,102,]),'NOT':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,60,-58,-59,-15,60,-33,-34,-18,60,60,60,-22,-23,60,60,60,60,60,60,60,60,60,60,60,-17,60,-60,60,-16,60,60,-24,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,60,60,60,60,60,-51,-25,-61,60,-30,-38,60,-26,-52,-56,-53,60,60,-31,-39,-40,60,-35,]),'ENTERO':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,64,-58,-59,-15,64,-33,-34,-18,64,64,64,-22,-23,64,64,64,64,64,64,64,64,64,64,64,-17,64,-60,64,-16,64,64,-24,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,64,64,64,64,64,-51,-25,-61,64,-30,-38,64,-26,-52,-56,-53,64,64,-31,-39,-40,64,-35,]),'DECIMAL':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,65,-58,-59,-15,65,-33,-34,-18,65,65,65,-22,-23,65,65,65,65,65,65,65,65,65,65,65,-17,65,-60,65,-16,65,65,-24,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,65,65,65,65,65,-51,-25,-61,65,-30,-38,65,-26,-52,-56,-53,65,65,-31,-39,-40,65,-35,]),'CADENA':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,66,-58,-59,-15,66,-33,-34,-18,66,66,66,-22,-23,66,66,66,66,66,66,66,66,66,66,66,-17,66,-60,66,-16,66,66,-24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,66,66,66,66,66,-51,-25,-61,66,-30,-38,66,-26,-52,-56,-53,66,66,-31,-39,-40,66,-35,]),'CASTINT':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,67,-58,-59,-15,67,-33,-34,-18,67,67,67,-22,-23,67,67,67,67,67,67,67,67,67,67,67,-17,67,-60,67,-16,67,67,-24,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,67,67,67,67,67,-51,-25,-61,67,-30,-38,67,-26,-52,-56,-53,67,67,-31,-39,-40,67,-35,]),'CASTCHAR':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,68,-58,-59,-15,68,-33,-34,-18,68,68,68,-22,-23,68,68,68,68,68,68,68,68,68,68,68,-17,68,-60,68,-16,68,68,-24,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,68,68,68,68,68,-51,-25,-61,68,-30,-38,68,-26,-52,-56,-53,68,68,-31,-39,-40,68,-35,]),'CASTFLOAT':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,69,-58,-59,-15,69,-33,-34,-18,69,69,69,-22,-23,69,69,69,69,69,69,69,69,69,69,69,-17,69,-60,69,-16,69,69,-24,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,69,69,69,69,69,-51,-25,-61,69,-30,-38,69,-26,-52,-56,-53,69,69,-31,-39,-40,69,-35,]),'CASTDOUBLE':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,70,-58,-59,-15,70,-33,-34,-18,70,70,70,-22,-23,70,70,70,70,70,70,70,70,70,70,70,-17,70,-60,70,-16,70,70,-24,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,70,70,70,70,70,-51,-25,-61,70,-30,-38,70,-26,-52,-56,-53,70,70,-31,-39,-40,70,-35,]),'SCANF':([10,11,12,14,21,27,29,30,33,35,36,37,39,48,51,52,53,54,56,57,58,59,60,62,67,68,69,70,72,78,83,84,86,87,89,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,139,140,141,142,143,144,145,146,147,148,149,151,156,157,159,163,192,197,203,205,210,213,215,218,220,223,228,235,241,242,244,245,249,251,],[-19,-20,-21,-57,-32,71,-58,-59,-15,71,-33,-34,-18,71,71,71,-22,-23,71,71,71,71,71,71,71,71,71,71,71,-17,71,-60,71,-16,71,71,-24,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,71,71,71,71,71,-51,-25,-61,71,-30,-38,71,-26,-52,-56,-53,71,71,-31,-39,-40,71,-35,]),'ELSE':([10,11,12,14,21,29,30,33,36,37,39,53,54,78,84,87,97,192,197,203,210,213,218,220,223,228,242,244,245,251,],[-19,-20,-21,-57,-32,-58,-59,-15,-33,-34,-18,-22,-23,-17,-60,-16,-24,-51,-25,-61,-30,232,-26,-52,-56,-53,-31,-39,-40,-35,]),'PARC':([10,11,12,14,21,29,30,33,35,36,37,39,53,54,61,63,64,65,66,72,76,77,78,82,84,87,92,95,96,97,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,153,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,189,190,192,197,198,199,203,207,210,211,212,213,216,217,218,220,223,225,228,230,231,237,238,242,244,245,251,],[-19,-20,-21,-57,-32,-58,-59,-15,-29,-33,-34,-18,-22,-23,-106,-111,-108,-109,-110,-29,150,-28,-17,-12,-60,-16,162,165,166,-24,-104,-102,-101,-103,-105,186,-115,-116,-114,-29,-119,-120,-121,-122,190,191,200,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-107,-117,217,-123,-51,-25,-27,-11,-61,-113,-30,229,-37,-38,-118,-124,-26,-52,-56,-112,-53,-36,243,-100,-10,-31,-39,-40,-35,]),'CASE':([10,11,12,14,21,29,30,33,36,37,39,40,53,54,78,79,84,87,97,192,197,203,210,213,214,218,220,223,228,233,234,242,244,245,246,251,253,255,],[-19,-20,-21,-57,-32,-58,-59,-15,-33,-34,-18,-14,-22,-23,-17,-13,-60,-16,-24,-51,-25,-61,-30,-38,235,-26,-52,-56,-53,235,-42,-31,-39,-40,-41,-35,-44,-43,]),'DEFAULT':([10,11,12,14,21,29,30,33,36,37,39,40,53,54,78,79,84,87,97,192,197,203,210,213,214,218,220,223,228,233,234,242,244,245,246,251,253,255,],[-19,-20,-21,-57,-32,-58,-59,-15,-33,-34,-18,-14,-22,-23,-17,-13,-60,-16,-24,-51,-25,-61,-30,-38,236,-26,-52,-56,-53,236,-42,-31,-39,-40,-41,-35,-44,-43,]),'PUNTOCOMA':([25,26,43,44,45,55,61,63,64,65,66,73,81,85,91,117,118,119,120,121,123,124,125,128,129,130,131,134,150,154,155,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,190,191,195,196,202,206,207,208,209,216,217,225,229,237,240,254,],[53,54,-81,84,87,97,-106,-111,-108,-109,-110,-50,-81,-64,-80,-104,-102,-101,-103,-105,-115,-116,-114,-119,-120,-121,-122,192,197,-68,203,212,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-107,-117,-123,218,219,220,223,-63,-113,228,-49,-118,-124,-112,242,-100,-62,-67,]),'OR':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[98,-106,-111,-108,-109,-110,98,98,98,98,-104,-102,-101,-103,-105,98,-115,-116,-114,-119,-120,-121,-122,98,98,98,98,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,98,-107,-117,-123,98,98,98,98,-113,98,98,-118,-124,-112,98,98,98,98,98,]),'AND':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[99,-106,-111,-108,-109,-110,99,99,99,99,-104,-102,-101,-103,-105,99,-115,-116,-114,-119,-120,-121,-122,99,99,99,99,99,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,99,-107,-117,-123,99,99,99,99,-113,99,99,-118,-124,-112,99,99,99,99,99,]),'ORB':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[100,-106,-111,-108,-109,-110,100,100,100,100,-104,-102,-101,-103,-105,100,-115,-116,-114,-119,-120,-121,-122,100,100,100,100,100,100,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,100,-107,-117,-123,100,100,100,100,-113,100,100,-118,-124,-112,100,100,100,100,100,]),'XORB':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[101,-106,-111,-108,-109,-110,101,101,101,101,-104,-102,-101,-103,-105,101,-115,-116,-114,-119,-120,-121,-122,101,101,101,101,101,101,101,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,101,-107,-117,-123,101,101,101,101,-113,101,101,-118,-124,-112,101,101,101,101,101,]),'IGUALDOBLE':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[103,-106,-111,-108,-109,-110,103,103,103,103,-104,-102,-101,-103,-105,103,-115,-116,-114,-119,-120,-121,-122,103,103,103,103,103,103,103,103,103,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,103,-107,-117,-123,103,103,103,103,-113,103,103,-118,-124,-112,103,103,103,103,103,]),'DIFERENTE':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[104,-106,-111,-108,-109,-110,104,104,104,104,-104,-102,-101,-103,-105,104,-115,-116,-114,-119,-120,-121,-122,104,104,104,104,104,104,104,104,104,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,104,-107,-117,-123,104,104,104,104,-113,104,104,-118,-124,-112,104,104,104,104,104,]),'MAYOR':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[105,-106,-111,-108,-109,-110,105,105,105,105,-104,-102,-101,-103,-105,105,-115,-116,-114,-119,-120,-121,-122,105,105,105,105,105,105,105,105,105,105,105,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,105,-107,-117,-123,105,105,105,105,-113,105,105,-118,-124,-112,105,105,105,105,105,]),'MAYORIGUAL':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[106,-106,-111,-108,-109,-110,106,106,106,106,-104,-102,-101,-103,-105,106,-115,-116,-114,-119,-120,-121,-122,106,106,106,106,106,106,106,106,106,106,106,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,106,-107,-117,-123,106,106,106,106,-113,106,106,-118,-124,-112,106,106,106,106,106,]),'MENOR':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[107,-106,-111,-108,-109,-110,107,107,107,107,-104,-102,-101,-103,-105,107,-115,-116,-114,-119,-120,-121,-122,107,107,107,107,107,107,107,107,107,107,107,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,107,-107,-117,-123,107,107,107,107,-113,107,107,-118,-124,-112,107,107,107,107,107,]),'MENORIGUAL':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[108,-106,-111,-108,-109,-110,108,108,108,108,-104,-102,-101,-103,-105,108,-115,-116,-114,-119,-120,-121,-122,108,108,108,108,108,108,108,108,108,108,108,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,108,-107,-117,-123,108,108,108,108,-113,108,108,-118,-124,-112,108,108,108,108,108,]),'SHIFTI':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[109,-106,-111,-108,-109,-110,109,109,109,109,-104,-102,-101,-103,-105,109,-115,-116,-114,-119,-120,-121,-122,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-93,-94,-95,-96,-97,-98,-99,109,-107,-117,-123,109,109,109,109,-113,109,109,-118,-124,-112,109,109,109,109,109,]),'SHIFTD':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[110,-106,-111,-108,-109,-110,110,110,110,110,-104,-102,-101,-103,-105,110,-115,-116,-114,-119,-120,-121,-122,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-93,-94,-95,-96,-97,-98,-99,110,-107,-117,-123,110,110,110,110,-113,110,110,-118,-124,-112,110,110,110,110,110,]),'POR':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[113,-106,-111,-108,-109,-110,113,113,113,113,-104,-102,-101,-103,-105,113,-115,-116,-114,-119,-120,-121,-122,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-97,-98,-99,113,-107,-117,-123,113,113,113,113,-113,113,113,-118,-124,-112,113,113,113,113,113,]),'MOD':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[114,-106,-111,-108,-109,-110,114,114,114,114,-104,-102,-101,-103,-105,114,-115,-116,-114,-119,-120,-121,-122,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-97,-98,-99,114,-107,-117,-123,114,114,114,114,-113,114,114,-118,-124,-112,114,114,114,114,114,]),'DIVIDIDO':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[115,-106,-111,-108,-109,-110,115,115,115,115,-104,-102,-101,-103,-105,115,-115,-116,-114,-119,-120,-121,-122,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-97,-98,-99,115,-107,-117,-123,115,115,115,115,-113,115,115,-118,-124,-112,115,115,115,115,115,]),'INTERROGACION':([55,61,63,64,65,66,77,92,95,96,117,118,119,120,121,122,123,124,125,128,129,130,131,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,196,198,204,206,207,208,211,216,217,225,227,237,247,250,254,],[116,-106,-111,-108,-109,-110,116,116,116,116,-104,-102,-101,-103,-105,116,-115,-116,-114,-119,-120,-121,-122,116,116,116,116,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,116,-107,-117,-123,116,116,116,116,-113,116,116,-118,-124,-112,116,116,116,116,116,]),'CORC':([61,63,64,65,66,117,118,119,120,121,123,124,125,128,129,130,131,158,160,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,190,204,207,216,217,225,237,],[-106,-111,-108,-109,-110,-104,-102,-101,-103,-105,-115,-116,-114,-119,-120,-121,-122,207,209,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-107,-117,-123,225,-113,-118,-124,-112,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'lista_metodos':([0,],[2,]),'metodos':([0,2,],[3,31,]),'instruccion':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[4,4,40,49,79,94,210,213,221,230,244,251,40,40,79,79,]),'tipo':([0,2,7,20,38,50,74,82,135,162,165,200,201,212,232,243,248,252,253,255,],[8,8,42,42,42,42,137,152,137,42,42,42,222,42,42,42,42,42,42,42,]),'instruccion_ciclo':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'instruccion_abierta':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'instruccion_llamar_metodo':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'mdecla':([0,2,7,8,20,38,42,50,137,162,165,200,212,224,232,243,248,252,253,255,],[13,13,13,44,13,13,44,13,195,13,13,13,13,239,13,13,13,13,13,13,]),'def_decla':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'variaciones':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'decla_con':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'decla_epsi':([0,2,7,20,38,50,162,165,200,212,232,243,248,252,253,255,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'instrucciones':([7,248,252,],[38,253,255,]),'corche':([13,73,],[46,134,]),'expresiones':([27,35,48,51,52,56,57,58,59,60,62,67,68,69,70,72,83,86,89,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,151,156,157,159,163,205,215,235,241,249,],[55,77,92,95,96,117,118,119,120,121,122,128,129,130,131,77,154,158,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,77,196,198,204,206,208,211,227,237,247,250,254,]),'valor':([27,35,48,51,52,56,57,58,59,60,62,67,68,69,70,72,83,86,89,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,138,151,156,157,159,163,205,215,235,241,249,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'listado_parametros':([35,72,127,],[76,133,189,]),'corchelle':([44,63,],[85,125,]),'arre_str_val':([46,],[88,]),'muhco_decla_struct':([74,],[135,]),'decla_struct':([74,135,],[136,194,]),'m_igual':([75,88,],[138,159,]),'parametros':([82,],[153,]),'pob_val':([85,],[155,]),'masinde':([154,],[202,]),'val_arri':([205,],[226,]),'finfor':([212,],[231,]),'switch_corpo':([214,],[233,]),'switch_corpo_salida':([214,233,],[234,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> lista_metodos','inicio',1,'p_inicio','MinorCSintactico.py',58),
  ('lista_metodos -> lista_metodos metodos','lista_metodos',2,'p_metodos_lista','MinorCSintactico.py',65),
  ('lista_metodos -> metodos','lista_metodos',1,'p_metodos_lista_solo','MinorCSintactico.py',76),
  ('metodos -> instruccion','metodos',1,'p_declaracion_var_glonal','MinorCSintactico.py',85),
  ('metodos -> STRUCT IDENTIFICADOR LLAA muhco_decla_struct LLAC','metodos',5,'p_declaracion_struct_a','MinorCSintactico.py',94),
  ('muhco_decla_struct -> muhco_decla_struct decla_struct','muhco_decla_struct',2,'p_instruccion_declaracion_struct_lista','MinorCSintactico.py',105),
  ('muhco_decla_struct -> decla_struct','muhco_decla_struct',1,'p_instruccion_declaracion_struct_epsilon','MinorCSintactico.py',116),
  ('decla_struct -> tipo mdecla PUNTOCOMA','decla_struct',3,'p_instruccion_declaracion_struct_puntual','MinorCSintactico.py',125),
  ('metodos -> tipo IDENTIFICADOR PARA parametros PARC instruccion','metodos',6,'p_metodos_declara','MinorCSintactico.py',137),
  ('parametros -> parametros COMA tipo IDENTIFICADOR','parametros',4,'p_metodos_declara_parametros_muchos','MinorCSintactico.py',148),
  ('parametros -> tipo IDENTIFICADOR','parametros',2,'p_metodos_declara_parametros_solo','MinorCSintactico.py',159),
  ('parametros -> <empty>','parametros',0,'p_metodos_declara_parametros_solo_va','MinorCSintactico.py',170),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instruccion','MinorCSintactico.py',179),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_inicio','MinorCSintactico.py',190),
  ('instruccion -> IDENTIFICADOR DOBLEPUNTO','instruccion',2,'p_sentencia_etiqueta_definicion','MinorCSintactico.py',199),
  ('instruccion -> GOTO IDENTIFICADOR PUNTOCOMA','instruccion',3,'p_sentencia_etiqueta_goto','MinorCSintactico.py',203),
  ('instruccion -> LLAA instrucciones LLAC','instruccion',3,'p_sentencia_encapsulado','MinorCSintactico.py',208),
  ('instruccion -> LLAA LLAC','instruccion',2,'p_sentencia_encapsulado_vacia','MinorCSintactico.py',217),
  ('instruccion -> instruccion_ciclo','instruccion',1,'p_instruccion_ciclo','MinorCSintactico.py',226),
  ('instruccion -> instruccion_abierta','instruccion',1,'p_instruccion_abierta_inst','MinorCSintactico.py',235),
  ('instruccion -> instruccion_llamar_metodo','instruccion',1,'p_instruccion_llamado_metodos','MinorCSintactico.py',244),
  ('instruccion_llamar_metodo -> BREAK PUNTOCOMA','instruccion_llamar_metodo',2,'p_interna_break','MinorCSintactico.py',254),
  ('instruccion_llamar_metodo -> CONTINUE PUNTOCOMA','instruccion_llamar_metodo',2,'p_interna_continue','MinorCSintactico.py',265),
  ('instruccion_llamar_metodo -> RETURN expresiones PUNTOCOMA','instruccion_llamar_metodo',3,'p_llamar_retorno_metodo','MinorCSintactico.py',276),
  ('instruccion_llamar_metodo -> IDENTIFICADOR PARA listado_parametros PARC PUNTOCOMA','instruccion_llamar_metodo',5,'p_llamar_funcion_generica','MinorCSintactico.py',287),
  ('instruccion_llamar_metodo -> PRINTF PARA listado_parametros PARC PUNTOCOMA','instruccion_llamar_metodo',5,'p_llamar_scanf','MinorCSintactico.py',298),
  ('listado_parametros -> listado_parametros COMA expresiones','listado_parametros',3,'p_listatdo_parametros_muchos_posibles','MinorCSintactico.py',309),
  ('listado_parametros -> expresiones','listado_parametros',1,'p_listatdo_parametros_solo_val','MinorCSintactico.py',320),
  ('listado_parametros -> <empty>','listado_parametros',0,'p_listatdo_parametros_solo_s','MinorCSintactico.py',329),
  ('instruccion_ciclo -> WHILE PARA expresiones PARC instruccion','instruccion_ciclo',5,'p_instruccion_while','MinorCSintactico.py',339),
  ('instruccion_ciclo -> DO instruccion WHILE PARA expresiones PARC PUNTOCOMA','instruccion_ciclo',7,'p_instruccion_do_while','MinorCSintactico.py',350),
  ('instruccion_ciclo -> variaciones','instruccion_ciclo',1,'p_instruccion_a_normal','MinorCSintactico.py',361),
  ('variaciones -> IDENTIFICADOR MASDOBLE','variaciones',2,'p_instruccion_variacioin_mas','MinorCSintactico.py',370),
  ('variaciones -> IDENTIFICADOR MENOSDOBLE','variaciones',2,'p_instruccion_variacioin_menos','MinorCSintactico.py',381),
  ('instruccion_ciclo -> FOR PARA instruccion expresiones PUNTOCOMA finfor PARC instruccion','instruccion_ciclo',8,'p_instruccion_for','MinorCSintactico.py',392),
  ('finfor -> instruccion','finfor',1,'p_instruciion_for_no_epsilon','MinorCSintactico.py',403),
  ('finfor -> <empty>','finfor',0,'p_instruciion_for_epsilon','MinorCSintactico.py',412),
  ('instruccion_abierta -> IF PARA expresiones PARC instruccion','instruccion_abierta',5,'p_instruccion_abierta_definicion_solo_if','MinorCSintactico.py',423),
  ('instruccion_abierta -> IF PARA expresiones PARC instruccion ELSE instruccion','instruccion_abierta',7,'p_instruccion_abierta_definicion_if_else','MinorCSintactico.py',434),
  ('instruccion_abierta -> SWITCH PARA expresiones PARC LLAA switch_corpo LLAC','instruccion_abierta',7,'p_instruccion_abierta_definicion_switch','MinorCSintactico.py',445),
  ('switch_corpo -> switch_corpo switch_corpo_salida','switch_corpo',2,'p_instrucccion_abierta_cuerpo_swtich_mult','MinorCSintactico.py',456),
  ('switch_corpo -> switch_corpo_salida','switch_corpo',1,'p_instrucccion_abierta_cuerpo_swtich_solo','MinorCSintactico.py',467),
  ('switch_corpo_salida -> CASE expresiones DOBLEPUNTO instrucciones','switch_corpo_salida',4,'p_instrucccion_abierta_cuerpo_swtich_inter','MinorCSintactico.py',476),
  ('switch_corpo_salida -> DEFAULT DOBLEPUNTO instrucciones','switch_corpo_salida',3,'p_instrucccion_abierta_cuerpo_swtich_inter_defecto','MinorCSintactico.py',487),
  ('tipo -> CHAR','tipo',1,'p_tipo','MinorCSintactico.py',499),
  ('tipo -> INT','tipo',1,'p_tipo','MinorCSintactico.py',500),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','MinorCSintactico.py',501),
  ('tipo -> FLOAT','tipo',1,'p_tipo','MinorCSintactico.py',502),
  ('corche -> corche CORA expresiones CORC','corche',4,'p_mucho_corchete','MinorCSintactico.py',524),
  ('corche -> <empty>','corche',0,'p_mucho_corchete_epsilon','MinorCSintactico.py',535),
  ('instruccion -> STRUCT IDENTIFICADOR IDENTIFICADOR corche PUNTOCOMA','instruccion',5,'p_instruccion_declaracion_struct','MinorCSintactico.py',545),
  ('instruccion -> IDENTIFICADOR PUNTO IDENTIFICADOR m_igual expresiones PUNTOCOMA','instruccion',6,'p_instruccion_asignar_valor_struct','MinorCSintactico.py',556),
  ('instruccion -> mdecla corche arre_str_val m_igual expresiones PUNTOCOMA','instruccion',6,'p_instruccion_asignacion','MinorCSintactico.py',569),
  ('arre_str_val -> PUNTO IDENTIFICADOR','arre_str_val',2,'p_instruccion_a','MinorCSintactico.py',583),
  ('arre_str_val -> <empty>','arre_str_val',0,'p_instruccion_b','MinorCSintactico.py',592),
  ('decla_con -> tipo mdecla IGUAL expresiones masinde PUNTOCOMA','decla_con',6,'p_instruccion_declaracion','MinorCSintactico.py',601),
  ('instruccion -> def_decla','instruccion',1,'p_isntruccion_decla','MinorCSintactico.py',615),
  ('def_decla -> decla_con','def_decla',1,'p_isntruccion_decla_real','MinorCSintactico.py',624),
  ('def_decla -> decla_epsi','def_decla',1,'p_isntruccion_decla_real','MinorCSintactico.py',625),
  ('decla_epsi -> tipo mdecla PUNTOCOMA','decla_epsi',3,'p_instruccion_declaracion_vac','MinorCSintactico.py',635),
  ('decla_epsi -> tipo mdecla corchelle pob_val PUNTOCOMA','decla_epsi',5,'p_instruccion_declaracion_arra_no_Pob','MinorCSintactico.py',646),
  ('pob_val -> IGUAL LLAA val_arri LLAC','pob_val',4,'p_val_arreglo_posible_valor','MinorCSintactico.py',658),
  ('pob_val -> IGUAL expresiones','pob_val',2,'p_val_arreglo_posible_valor_solitario','MinorCSintactico.py',662),
  ('pob_val -> <empty>','pob_val',0,'p_val_arreglo_posible_valor_epsilon','MinorCSintactico.py',666),
  ('val_arri -> val_arri COMA expresiones','val_arri',3,'p_val_arreglo_mucho','MinorCSintactico.py',670),
  ('val_arri -> expresiones','val_arri',1,'p_val_arreglo_epsilon','MinorCSintactico.py',675),
  ('masinde -> masinde COMA mdecla IGUAL expresiones','masinde',5,'p_instruccion_mucha_declaracion_algo','MinorCSintactico.py',680),
  ('masinde -> <empty>','masinde',0,'p_instruccion_mucha_declaracion_epsilon','MinorCSintactico.py',692),
  ('m_igual -> IGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',701),
  ('m_igual -> MASIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',702),
  ('m_igual -> MENOSIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',703),
  ('m_igual -> PORIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',704),
  ('m_igual -> DIVIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',705),
  ('m_igual -> MODIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',706),
  ('m_igual -> SHIFTIIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',707),
  ('m_igual -> SHIFTDIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',708),
  ('m_igual -> ANDIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',709),
  ('m_igual -> XORIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',710),
  ('m_igual -> ORIGUAL','m_igual',1,'p_instruccion_igualaciones','MinorCSintactico.py',711),
  ('mdecla -> mdecla COMA IDENTIFICADOR','mdecla',3,'p_muchas_declaraciones_variables','MinorCSintactico.py',720),
  ('mdecla -> IDENTIFICADOR','mdecla',1,'p_muchas_declaraciones_variables_ini','MinorCSintactico.py',731),
  ('expresiones -> expresiones OR expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',741),
  ('expresiones -> expresiones AND expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',742),
  ('expresiones -> expresiones ORB expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',744),
  ('expresiones -> expresiones XORB expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',745),
  ('expresiones -> expresiones ANDB expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',746),
  ('expresiones -> expresiones IGUALDOBLE expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',748),
  ('expresiones -> expresiones DIFERENTE expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',749),
  ('expresiones -> expresiones MAYOR expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',752),
  ('expresiones -> expresiones MAYORIGUAL expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',753),
  ('expresiones -> expresiones MENOR expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',754),
  ('expresiones -> expresiones MENORIGUAL expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',755),
  ('expresiones -> expresiones SHIFTI expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',757),
  ('expresiones -> expresiones SHIFTD expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',758),
  ('expresiones -> expresiones MAS expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',760),
  ('expresiones -> expresiones MENOS expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',761),
  ('expresiones -> expresiones POR expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',763),
  ('expresiones -> expresiones MOD expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',764),
  ('expresiones -> expresiones DIVIDIDO expresiones','expresiones',3,'p_expresiones_binarias','MinorCSintactico.py',765),
  ('expresiones -> expresiones INTERROGACION expresiones DOBLEPUNTO expresiones','expresiones',5,'p_valor_ternario','MinorCSintactico.py',777),
  ('expresiones -> MENOS expresiones','expresiones',2,'p_expresiones_unarias','MinorCSintactico.py',788),
  ('expresiones -> MAS expresiones','expresiones',2,'p_expresiones_unarias','MinorCSintactico.py',789),
  ('expresiones -> NOTB expresiones','expresiones',2,'p_expresiones_unarias','MinorCSintactico.py',790),
  ('expresiones -> ANDB expresiones','expresiones',2,'p_expresiones_unarias','MinorCSintactico.py',791),
  ('expresiones -> NOT expresiones','expresiones',2,'p_expresiones_unarias','MinorCSintactico.py',792),
  ('expresiones -> valor','expresiones',1,'p_expresiones_sola','MinorCSintactico.py',805),
  ('expresiones -> PARA expresiones PARC','expresiones',3,'p_expresiones_parentesis','MinorCSintactico.py',814),
  ('valor -> ENTERO','valor',1,'p_valor_entero','MinorCSintactico.py',823),
  ('valor -> DECIMAL','valor',1,'p_valor_decimal','MinorCSintactico.py',834),
  ('valor -> CADENA','valor',1,'p_valor_cadena','MinorCSintactico.py',845),
  ('valor -> IDENTIFICADOR','valor',1,'p_valor_variable','MinorCSintactico.py',856),
  ('corchelle -> corchelle CORA expresiones CORC','corchelle',4,'p_mucho_corchete_lleno','MinorCSintactico.py',867),
  ('corchelle -> CORA expresiones CORC','corchelle',3,'p_mucho_corchete_lleno_siempre','MinorCSintactico.py',878),
  ('valor -> IDENTIFICADOR corchelle','valor',2,'p_valor_variable_arreglo','MinorCSintactico.py',887),
  ('expresiones -> IDENTIFICADOR MASDOBLE','expresiones',2,'p_valor_variable_inc','MinorCSintactico.py',898),
  ('expresiones -> IDENTIFICADOR MENOSDOBLE','expresiones',2,'p_valor_variable_dec','MinorCSintactico.py',909),
  ('valor -> IDENTIFICADOR PUNTO IDENTIFICADOR','valor',3,'p_valor_struct_llamado','MinorCSintactico.py',920),
  ('valor -> IDENTIFICADOR corchelle PUNTO IDENTIFICADOR','valor',4,'p_valor_variable_arreglo_struct','MinorCSintactico.py',931),
  ('valor -> CASTINT expresiones','valor',2,'p_valor_cast_int','MinorCSintactico.py',942),
  ('valor -> CASTCHAR expresiones','valor',2,'p_valor_cast_char','MinorCSintactico.py',953),
  ('valor -> CASTFLOAT expresiones','valor',2,'p_valor_cast_Float','MinorCSintactico.py',964),
  ('valor -> CASTDOUBLE expresiones','valor',2,'p_valor_cast_double','MinorCSintactico.py',975),
  ('valor -> SCANF PARA PARC','valor',3,'p_valor_scanf','MinorCSintactico.py',986),
  ('valor -> IDENTIFICADOR PARA listado_parametros PARC','valor',4,'p_valor_funcion_llamado','MinorCSintactico.py',998),
]
