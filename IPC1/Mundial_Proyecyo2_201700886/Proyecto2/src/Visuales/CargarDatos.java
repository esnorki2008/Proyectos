/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visuales;

import Listas.*;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStreamReader;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class CargarDatos extends javax.swing.JFrame {
    static int Usu=0;
    public String Extensiones[] = new String[5];
        DefaultTableModel mode;

    public CargarDatos() {
        
        Extensiones[0] = "eqp";
        Extensiones[1] = "jug";
        Extensiones[2] = "stm";
        Extensiones[3] = "usr";
        Extensiones[4] = "csv";
        
        String Titu[]= {"Archivo","Exitosos","Duplicados","Inválidos","Total"};
        String Cuerpo[][]= {};
        mode = new DefaultTableModel(Cuerpo,Titu);
        initComponents();
        jTable1.setModel(mode);

        setSize(1200, 500);

        setLocationRelativeTo(null);

        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Carga De Archivos");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 30, 210, 50);

        jButton1.setText("Cargar Archivos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(40, 130, 223, 25);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(200, 200, 73, 25);

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(30, 230, 73, 25);

        jLabel2.setText("0");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(480, 100, 70, 90);

        jLabel3.setText("Total De Datos Cargados");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(360, 40, 200, 30);

        jTabbedPane2.addTab("Cargar", jPanel1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane5.addTab("tab1", jScrollPane1);

        jTabbedPane2.addTab("Estado De Los Datos Cargados", jTabbedPane5);

        jTabbedPane1.addTab("Cargar Datos", jTabbedPane2);

        jPanel3.setLayout(null);

        jButton5.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jButton5.setText("↑");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5);
        jButton5.setBounds(400, 230, 110, 80);

        jLabel4.setText("Apellido");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(40, 80, 70, 50);

        jLabel5.setText("Nombre");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(40, 40, 80, 30);

        jLabel6.setText("Contraseña");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(40, 130, 60, 40);

        jButton6.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jButton6.setText("↓");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6);
        jButton6.setBounds(70, 230, 110, 80);

        jButton7.setText("Modificar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7);
        jButton7.setBounds(220, 220, 150, 90);
        jPanel3.add(jTextField1);
        jTextField1.setBounds(130, 40, 310, 40);
        jPanel3.add(jTextField2);
        jTextField2.setBounds(130, 90, 310, 40);
        jPanel3.add(jTextField3);
        jTextField3.setBounds(130, 140, 310, 40);

        jTabbedPane4.addTab("Administrar Usuarios", jPanel3);

        jPanel4.setLayout(null);

        jButton9.setText("Anterior");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9);
        jButton9.setBounds(130, 230, 110, 80);

        jLabel7.setText("Nombre Equipo");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(0, 10, 130, 30);

        jLabel8.setText("Fecha Creación");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(0, 80, 130, 50);

        jTextField4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.add(jTextField4);
        jTextField4.setBounds(130, 10, 310, 40);

        jTextField5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.add(jTextField5);
        jTextField5.setBounds(130, 90, 310, 40);

        jTextField6.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.add(jTextField6);
        jTextField6.setBounds(130, 160, 310, 40);

        jLabel9.setText("Mundiales Ganados");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(0, 160, 130, 40);

        jButton17.setText("Siguiente");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton17);
        jButton17.setBounds(330, 230, 110, 80);

        jTabbedPane4.addTab("Administrar Equipos", jPanel4);

        jPanel6.setLayout(null);

        jLabel10.setText("Nombre");
        jPanel6.add(jLabel10);
        jLabel10.setBounds(40, 10, 80, 30);
        jPanel6.add(jTextField7);
        jTextField7.setBounds(130, 10, 310, 40);
        jPanel6.add(jTextField8);
        jTextField8.setBounds(130, 60, 310, 40);
        jPanel6.add(jTextField9);
        jTextField9.setBounds(130, 110, 310, 40);

        jLabel11.setText("Posición");
        jPanel6.add(jLabel11);
        jLabel11.setBounds(40, 110, 60, 40);

        jLabel12.setText("Equipo");
        jPanel6.add(jLabel12);
        jLabel12.setBounds(40, 50, 70, 50);

        jButton8.setText("Anterior");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton8);
        jButton8.setBounds(130, 230, 110, 80);

        jButton13.setText("Siguiente");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton13);
        jButton13.setBounds(330, 230, 110, 80);
        jPanel6.add(jTextField13);
        jTextField13.setBounds(130, 160, 310, 40);
        jPanel6.add(jTextField14);
        jTextField14.setBounds(470, 70, 220, 40);

        jLabel16.setText("Altura");
        jPanel6.add(jLabel16);
        jLabel16.setBounds(560, 30, 60, 40);

        jLabel18.setText("Año Nacimiento");
        jPanel6.add(jLabel18);
        jLabel18.setBounds(20, 150, 90, 50);
        jPanel6.add(jTextField15);
        jTextField15.setBounds(470, 150, 220, 40);

        jLabel19.setText("Peso");
        jLabel19.setToolTipText("");
        jPanel6.add(jLabel19);
        jLabel19.setBounds(560, 110, 60, 40);

        jTabbedPane4.addTab("Administrar Jugadores", jPanel6);

        jPanel7.setLayout(null);

        jButton15.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jButton15.setText("↑");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton15);
        jButton15.setBounds(190, 230, 110, 80);

        jLabel13.setText("Jugador");
        jPanel7.add(jLabel13);
        jLabel13.setBounds(10, 10, 80, 30);
        jPanel7.add(jTextField10);
        jTextField10.setBounds(100, 10, 310, 40);
        jPanel7.add(jTextField11);
        jTextField11.setBounds(100, 90, 310, 40);
        jPanel7.add(jTextField12);
        jTextField12.setBounds(100, 160, 310, 40);

        jLabel14.setText("Rareza");
        jPanel7.add(jLabel14);
        jLabel14.setBounds(10, 160, 60, 40);

        jLabel15.setText("Equipo");
        jPanel7.add(jLabel15);
        jLabel15.setBounds(10, 80, 70, 50);

        jLabel17.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 51)));
        jPanel7.add(jLabel17);
        jLabel17.setBounds(430, 10, 250, 290);

        jTabbedPane4.addTab("Administrar Estampas", jPanel7);

        jTabbedPane1.addTab("Administración", jTabbedPane4);

        jPanel2.setLayout(null);

        jButton4.setText("Generar Reportes");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(170, 70, 370, 150);

        jButton10.setText("Regresar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10);
        jButton10.setBounds(560, 80, 79, 140);

        jTabbedPane3.addTab("Generar Reportes", jPanel2);

        jTabbedPane1.addTab("Reportes", jTabbedPane3);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 10, 720, 360);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static int ceros,unos;
    int Jhonnatan=0,Duplicados=0;
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (abrirArchivo == null) {
            abrirArchivo = new JFileChooser();
        }
        //Con esto solamente podamos abrir archivos
        abrirArchivo.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int seleccion = abrirArchivo.showOpenDialog(this);
        
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File f = abrirArchivo.getSelectedFile();
            try {
                String nombre = f.getName();
                String path = f.getAbsolutePath();
                String Direc[] = path.split("\\.");
                if (Exten(Direc[1])) {
                    JOptionPane.showMessageDialog(null, "Cargando Archivo");
                    String contenido = getArchivo(path);
                    for (int i = 0; i < Contador; i++) {
                        String Hola[] = contenido.split("\n");
                        
                        
                        
                        String Ingreso[] = Hola[i].split("\\|");
                        String Ingre[] = Hola[i].split("\\,");
                     
                        //Objetos y validaxciones
                        Jhonnatan=0;
                        EnlaceEquipos Equipo = new EnlaceEquipos();
                        EnlaceJugadores Jugador = new EnlaceJugadores();
                        EnlaceEstampas Estampas = new EnlaceEstampas();
                        EnlaceUsuarios Usuarios = new EnlaceUsuarios();
                        EnlaceEstampasUsuarios EU = new EnlaceEstampasUsuarios();
                        EnlaceRepetidas Repetidas = new EnlaceRepetidas();
                        switch (Direc[1]) {
                            case "eqp":
                                if (NumerosEnteros(Ingreso[0]) && NumerosEnteros(Ingreso[3]) && LetrasNumEspacio(Ingreso[1]) && (Equipo.Iguales(Integer.parseInt(Ingreso[0])))&&(Fecha(Ingreso[2]))) {
                                    Equipo.Agregar(Integer.parseInt(Ingreso[0]), Ingreso[1], Ingreso[2], Integer.parseInt(Ingreso[3]));
                                    
                                } else {
                                    Jhonnatan++;
                                    //JOptionPane.showMessageDialog(null, Ingreso[1]);
                                }
                                break;
                        
                            case "jug": 
                                
                                if(NumerosEnteros(Ingreso[0])&& LetrasEspacio(Ingreso[1])&& Letras(Ingreso[2])&&NumerosEnteros(Ingreso[3])&& FlotantesCon2(Ingreso[4])&& FlotantesCon2(Ingreso[5])&&NumerosEnteros(Ingreso[6])&&(!Equipo.Iguales(Integer.parseInt(Ingreso[6])))&&(Jugador.Iguales(Integer.parseInt(Ingreso[0])))){
                                Jugador.Agregar(Integer.parseInt(Ingreso[0]), Ingreso[1], Ingreso[2],Integer.parseInt(Ingreso[3]),Float.parseFloat(Ingreso[4]), Float.parseFloat(Ingreso[5]), Integer.parseInt(Ingreso[6]));
                                }else {
                                    Jhonnatan++;
                                    //JOptionPane.showMessageDialog(null, Ingreso[6]);
                                }
                                
                                break;
                                
                            case "stm": 
                                if(IDEstampas(Ingreso[0])&&(IDJU(Integer.parseInt(Ingreso[1])))&&(IDEQ(Integer.parseInt(Ingreso[2])))&&(Rareza(Ingreso[3]))&&(Estampas.EstampasIguales(Ingreso[0]))){
                                Estampas.Agregar(Integer.parseInt(Ingreso[0]), Integer.parseInt(Ingreso[1]), Integer.parseInt(Ingreso[2]), Ingreso[3],Ingreso[4]);
                                }else{
                                    Jhonnatan++;
                                    //JOptionPane.showMessageDialog(null, Ingreso[0]);
                                }
                                break;
                                
   
                            case "usr": 
                                if(IDUsuario(Ingreso[0])&&(Letras(Ingreso[1]))&&(Letras(Ingreso[2]))&&(Contrase(Ingreso[3]))&&(Usuarios.Iguales(Ingreso[0]))){
                                Usuarios.Agregar(Integer.parseInt(Ingreso[0]), Ingreso[1], Ingreso[2], Ingreso[3]);Usu++;
                                }else{
                                      Jhonnatan++;
                                    //JOptionPane.showMessageDialog(null, Ingreso[0]);
                                }
                                
                                break;
                                
                            case "csv":
                                
                                if(CantidadPegada(Ingre[2],Ingre[3])&&IDUsuario(Ingre[0])&&IDEstampas(Ingre[1])&&(!Usuarios.Iguales(Ingre[0]))&&(!Estampas.EstampasIguales(Ingre[1]))){
                                
                                int Cantid= Integer.parseInt(Ingre[3]);
                                
                                
                                if(Ingre[2].equals("0")){ ceros++;
                                EU.Agregar(Integer.parseInt(Ingre[0]),Integer.parseInt(Ingre[1]), Ingre[2],1);
                                Cantid= (Integer.parseInt(Ingre[3]));
                                Cantid=Cantid-1;
                                    System.out.println(Cantid);
                                
                                }
                                
                                
                                if(Cantid >=0){ unos++;
                                Repetidas.Agregar(Integer.parseInt(Ingre[0]),Integer.parseInt(Ingre[1]), Ingre[2],Cantid);
                                    System.out.println(Cantid);
                                }
                                
                                
                                
                                
                                
                                //Si no cumple las mayores condiciones

                                }else{ 
                                    //
                                    Jhonnatan++;
                                    //JOptionPane.showMessageDialog(null,Ingre[0]);
                                }
                                
                                
                                break;
                        
                        
                        
                        
                        
                        }
 
                        
                        //Separador de los case
                        
                        
                        
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Archivo Invalido O Tiene Errores");
                }
                //System.out.println(path);
                //System.out.println(nombre);
                
                 switch (Direc[1]) {
                            case "eqp":    EnlaceEquipos Equipo = new EnlaceEquipos();
                            Duplicados=Equipo.Repetidos;
                            Equipo.Repetidos=0;
                            

                             Equipo.Mostrar(); break;
                                     
                            case "jug":  EnlaceJugadores Ju = new EnlaceJugadores();
                            Duplicados=Ju.Repetidos;
                            Ju.Repetidos=0;
                            Ju.Imprimir();
                            break; 
                            
                            case "stm": EnlaceEstampas Estampas = new EnlaceEstampas();
                            Duplicados=Estampas.Repetidos;
                            Estampas.Repetidos=0;
                            Estampas.Imprimir();
                            break;
                            
                            case "usr": EnlaceUsuarios Usuarios = new EnlaceUsuarios();
                            Duplicados=Usuarios.Repetidos;
                            Usuarios.Repetidos=0;
                            Usuarios.Imprimir();
                            System.out.println("******************************");
                            Usuarios.Ordenar1();
                            //Usar Lista Ordenada
                           // Usuarios.Imprimir();
                            
                            break;
                            
                            case "csv":                        
                                EnlaceEstampasUsuarios EU = new EnlaceEstampasUsuarios();
                                EnlaceRepetidas Rep = new EnlaceRepetidas();
                                EU.Imprimir();
                                
                                Rep.Imprimir();
                                    
                                
                                System.out.println(ceros);
                                System.out.println(unos);
                                Sobres();
                            break;        

                 
                 
                 
                 }
                 String h[]=pos.split("\\\\");
                 int asq=h.length;
                 //System.out.println(h[asq-1]);        
                 Object Dato[]={h[asq-1],Contador-Jhonnatan,Duplicados,Jhonnatan-Duplicados,Contador};
                 mode.addRow(Dato);
                
                this.setTitle(nombre);
                //String contenido = getArchivo(path);


            } catch (Exception exp) {System.out.println(exp);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    // Lo de sobres para remplazar el boton
    private void Sobres(){
           EnlaceUsuarios Usuarios = new EnlaceUsuarios();
        int l = 0;
        //jLabel2.setText("" + a);

        //Crear Sobres
        Usuarios.ImprimirOrden();

        EnlaceEstampasUsuarios EU = new EnlaceEstampasUsuarios();
        Usuarios.PreSacar();
        
        while (true) {             int a = Usuarios.SacarValores(l);
            System.out.println(a);

            if (l == a) { break;
            }
             int MaxSobres = (int) (Math.random() * 4) + 4;
             int Sobre=0;
             int t; 
             
            while(true)
            {Sobre++;
                while (true) {

                     t = EU.CrearSobres(a, Sobre, MaxSobres);
                    if (t >= -3) {
                        break;
                    }
                }
                if(t>=1){break;}
                
            }l=a;
        }
        EU.Imprimir();
    
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        EnlaceUsuarios Usuarios = new EnlaceUsuarios();
        int l = 0;
        //jLabel2.setText("" + a);

        //Crear Sobres
        Usuarios.ImprimirOrden();

        EnlaceEstampasUsuarios EU = new EnlaceEstampasUsuarios();
        Usuarios.PreSacar();
        
        while (true) {             int a = Usuarios.SacarValores(l);
            System.out.println(a);

            if (l == a) { break;
            }
             int MaxSobres = (int) (Math.random() * 4) + 4;
             int Sobre=0;
             int t; 
             
            while(true)
            {Sobre++;
                while (true) {

                     t = EU.CrearSobres(a, Sobre, MaxSobres);
                    if (t >= -3) {
                        break;
                    }
                }
                if(t>=1){break;}
                
            }l=a;
        }
        EU.Imprimir();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       EnlaceUsuarios Usuarios = new EnlaceUsuarios();
        
        Usuarios.PreSacar();

        
        for(int i=0;i<10;i++)System.out.println("");
        
              // EnlaceEstampasUsuarios EU = new EnlaceEstampasUsuarios();
              // EU.CrearSobres1();
                            EnlaceUsuarios EU = new EnlaceUsuarios();
                            
                            System.out.println("////////-----------///////////////");
                            EU.ImprimirOrden();
                            int a = EU.SacarValores(0);
                            System.out.println(a);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        if (SacarUsuariosInicio == null) {
            JOptionPane.showMessageDialog(null, "No ha visualizado ningún dato", "Estado", JOptionPane.DEFAULT_OPTION);
        }else{
            if (Letras(jTextField1.getText()) && Letras(jTextField2.getText()) && Contrase(jTextField3.getText())) {
                SacarUsuariosInicio.Nombre = jTextField1.getText();
                SacarUsuariosInicio.Apellido = jTextField2.getText();
                SacarUsuariosInicio.Contra = jTextField3.getText();
                JOptionPane.showMessageDialog(null, "Dato Modificado Exitosamente", "Estado", JOptionPane.DEFAULT_OPTION);

            } else {
                JOptionPane.showMessageDialog(null, "Los Datos No Cumplen Con Los Parametros", "Estado", JOptionPane.DEFAULT_OPTION);
            }

        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        EnlaceEquipos Equipos = new EnlaceEquipos();
        if(jTextField1.getText().equals("")){    SacarUsuariosInicio=EnlaceUsuarios.Comienzo;}
        else{
            if(SacarUsuariosInicio.Siguiente==null){SacarUsuariosInicio=EnlaceUsuarios.Comienzo;}else{SacarUsuariosInicio=SacarUsuariosInicio.Siguiente;}

        }

        jTextField1.setText(SacarUsuariosInicio.Nombre);
        jTextField2.setText(SacarUsuariosInicio.Apellido);
        jTextField3.setText(SacarUsuariosInicio.Contra);
    }//GEN-LAST:event_jButton6ActionPerformed

//GEN-FIRST:event_jButton5ActionPerformed
 private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
 EnlaceEquipos Equipos = new EnlaceEquipos();
        if(jTextField1.getText().equals("")){    SacarUsuariosInicio=EnlaceUsuarios.Ordenada;}
        else{
            if(SacarUsuariosInicio.Anterior==null){SacarUsuariosInicio=EnlaceUsuarios.Ordenada;}else{SacarUsuariosInicio=SacarUsuariosInicio.Anterior;}

        }

        jTextField1.setText(SacarUsuariosInicio.Nombre);
        jTextField2.setText(SacarUsuariosInicio.Apellido);
        jTextField3.setText(SacarUsuariosInicio.Contra);
    }              
//GEN-LAST:event_jButton5ActionPerformed
//Boton Anterior Jugadores
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        EnlaceEquipos  Equipos = new EnlaceEquipos();
        
        if(Pub==null){Pub=EnlaceJugadores.Cabeza;}else{
            if(Pub.Anterior==null){Pub=EnlaceJugadores.Cabeza;}else{Pub=Pub.Anterior;}
            
        
        }
        
        jTextField7.setText(Pub.Nombre);
        jTextField8.setText(Equipos.DevolverEquipo(Pub.IDEquipo));
        jTextField9.setText(Pub.Posicion);
        jTextField13.setText(""+Pub.Año);
        jTextField14.setText(""+Pub.Altura);
        jTextField15.setText(""+Pub.Peso);
        
    }//GEN-LAST:event_jButton8ActionPerformed
    private         NodoEquipos Mostrar;
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        if(Mostrar==null){Mostrar=EnlaceEquipos.Cabeza;}
        else{
        if(Mostrar.Siguiente!=null){Mostrar=Mostrar.Siguiente;}else{Mostrar=EnlaceEquipos.Cabeza;}    
        }
         jTextField4.setText(Mostrar.Dato);
        jTextField5.setText(Mostrar.Fecha);
        jTextField6.setText(""+Mostrar.Mundiales);

    }//GEN-LAST:event_jButton17ActionPerformed
private NodoJugadores Pub;
    //Siguiente Boton Jugadores
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        EnlaceEquipos  Equipos = new EnlaceEquipos();
        
        if(Pub==null){Pub=EnlaceJugadores.Inicio;}else{
            if(Pub.Siguiente==null){Pub=EnlaceJugadores.Inicio;}else{Pub=Pub.Siguiente;}
            
        
        }
        
        jTextField7.setText(Pub.Nombre);
        jTextField8.setText(Equipos.DevolverEquipo(Pub.IDEquipo));
        jTextField9.setText(Pub.Posicion);
        jTextField13.setText(""+Pub.Año);
        jTextField14.setText(""+Pub.Altura);
        jTextField15.setText(""+Pub.Peso);

        
        
        
        
    }//GEN-LAST:event_jButton13ActionPerformed

    
    private NodoEstampas Mostr;
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
    EnlaceEquipos Equipos = new EnlaceEquipos();
    EnlaceJugadores Jugadores = new EnlaceJugadores();

    
    if(Mostr==null){Mostr=EnlaceEstampas.Inicio;}else{
    if(Mostr.Siguiente==null){Mostr=EnlaceEstampas.Inicio;}else{
    
    Mostr=Mostr.Siguiente;
    }
    
    
    }
        
    
        jTextField10.setText(Jugadores.DevolverJugador(Mostr.IDJugador));
        jTextField11.setText(Equipos.DevolverEquipo(Mostr.IDEquipo));
        
        jLabel17.setIcon(new ImageIcon(Mostr.RutaImagen));
        if(Mostr.Rareza.equals("0")){
        jTextField12.setText("Común");    
        jLabel17.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        }else{
        jTextField12.setText("Raro");    
        jLabel17.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 51)));}
        
        
    }//GEN-LAST:event_jButton15ActionPerformed

     public void Prueba()
    {
        Document document = new Document();
         
        try{
            PdfWriter.getInstance(document, new FileOutputStream("tablas.pdf"));
            document.open();
             
            // Este codigo genera una tabla de 3 columnas
            PdfPTable table = new PdfPTable(2);                
             
            // addCell() agrega una celda a la tabla, el cambio de fila
            // ocurre automaticamente al llenar la fila
            table.addCell("Celda 1");
            table.addCell("Celda 2");
            table.addCell("Celda 3");
             
            table.addCell("Celda 4");
            table.addCell("Celda 5");
            table.addCell("Celda 6");
             
            table.addCell("Celda 7");
            table.addCell("Celda 8");
            table.addCell("Celda 9");
             
            // Si desea crear una celda de mas de una columna
            // Cree un objecto Cell y cambie su propiedad span
             
            PdfPCell celdaFinal = new PdfPCell(new Paragraph("Final de la tabla"));
             
            // Indicamos cuantas columnas ocupa la celda
            celdaFinal.setColspan(3);
            table.addCell(celdaFinal);
             
            // Agregamos la tabla al documento            
            document.add(table);
             
            document.close();
             
        }catch(Exception e)
        {
            System.err.println("Ocurrio un error al crear el archivo");
            System.exit(-1);
        }
    }
    
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if(Mostrar==null){Mostrar=EnlaceEquipos.nodo;}
        else{
        if(Mostrar.Anterior!=null){Mostrar=Mostrar.Anterior;}else{Mostrar=EnlaceEquipos.nodo;}    
        }
         jTextField4.setText(Mostrar.Dato);
        jTextField5.setText(Mostrar.Fecha);
        jTextField6.setText(""+Mostrar.Mundiales);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        EnlaceUsuarios Usuarios= new EnlaceUsuarios();
        NodoOrden Actual=null;
        String[][] Datos = new String[Usu][2];
        String[][] Datos1 = new String[Usu][2];
        for(int i=0;i<Usu;i++){
            Actual=Usuarios.SacarSiguiente(Actual);
            
            Datos[i][0]=""+Actual.ID;
            Datos[i][1]=""+ReporteAdmin1(Actual.ID);    
        }
       
       
        
        for (int j = 0; j < Usu; j++) {

            for (int i = 0; i < Usu - 1; i++) {
                if (Integer.parseInt(Datos[i][1]) < Integer.parseInt(Datos[i+1][1])) {
                    int Copia=Integer.parseInt(Datos[i][1]);
                    String CopiaS=Datos[i][0];

                    Datos[i][0]=Datos[i+1][0];
                    Datos[i][1]=Datos[i+1][1];
                    
                    Datos[i+1][0]=""+CopiaS;
                    Datos[i+1][1]=""+Copia;
                    
                    
                }
                
                

            }
            
        }
        
        
        
       
        
        
        
        
        
        
        
        
        
        
        
      /*  System.out.println("///////////////////////////");
        System.out.println("Con Mas");
         for(int i=0;i<Usu;i++){
            System.out.println(Datos[i][0]);
            System.out.println(Datos[i][1]);
            
            
            }*/
         
         System.out.println("///////////////////////////");
        System.out.println("Con Menos");
         for(int i=Usu-1;i>=0;i--){
            System.out.println(Datos[i][0]);
            System.out.println(Datos[i][1]);
            
            
            }
        
         Actual=null;
         //Para la tercera coas
         for(int i=0;i<Usu;i++){
            Actual=Usuarios.SacarSiguiente(Actual);
            
            Datos1[i][0]=""+Actual.ID;
            Datos1[i][1]=""+ReporteAdmin2(Actual.ID);    
        } 
         
         
         
         
         for (int j = 0; j < Usu; j++) {

            for (int i = 0; i < Usu - 1; i++) {
                if (Integer.parseInt(Datos1[i][1]) < Integer.parseInt(Datos1[i+1][1])) {
                    int Copia=Integer.parseInt(Datos1[i][1]);
                    String CopiaS=Datos1[i][0];

                    Datos1[i][0]=Datos1[i+1][0];
                    Datos1[i][1]=Datos1[i+1][1];
                    
                    Datos1[i+1][0]=""+CopiaS;
                    Datos1[i+1][1]=""+Copia;
                    
                    
                }
                
                

            }
            
        }
         
         
          System.out.println("///////////////////////////");
        System.out.println("Con Mas");
         for(int i=0;i<Usu;i++){
            System.out.println(Datos[i][0]);
            System.out.println(Datos[i][1]);
            
            
            }
         
         
        Document document = new Document();
         
        try{
            PdfWriter.getInstance(document, new FileOutputStream("ReporteAdmin.pdf"));
            document.open();
             
            PdfPTable table = new PdfPTable(2);                
             
            PdfPCell celdaFinal = new PdfPCell(new Paragraph("Top Usuarios con Mas Estampas Pegadas"));
            celdaFinal.setColspan(2);
            table.addCell(celdaFinal);
            table.addCell("Codigo De Usuario");
            table.addCell("Cantidad De Estampas");

            for(int i=0;i<Usu;i++){
            table.addCell(Datos[i][0]);
            table.addCell(Datos[i][1]);
            }
            
            
            celdaFinal = new PdfPCell(new Paragraph("Top Usuarios con Más Estampas En Total"));
            celdaFinal.setColspan(2);
            table.addCell(celdaFinal);
            table.addCell("Codigo De Usuario");
            table.addCell("Cantidad De Estampas");

            for(int i=Usu-1;i>=0;i--){
            table.addCell(Datos1[i][0]);
            table.addCell(Datos1[i][1]);
            }
            
            
            celdaFinal = new PdfPCell(new Paragraph("Top Usuarios con Menos Estampas Pegadas"));
            celdaFinal.setColspan(2);
            table.addCell(celdaFinal);
            table.addCell("Codigo De Usuario");
            table.addCell("Cantidad De Estampas");

            for(int i=Usu-1;i>=0;i--){
            table.addCell(Datos[i][0]);
            table.addCell(Datos[i][1]);
            }
            
            document.add(table);
             
            document.close();
             
        }catch(Exception e)
        {
            System.err.println("Ocurrio un error al crear el archivo");
            System.exit(-1);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        
     NewJFrame Abrir = new NewJFrame();
    Abrir.setVisible(true);
    this.setVisible(false);
        
/*
        EnlaceEstampas Estampas= new EnlaceEstampas();
        NodoEstampas Actual=null;
        
        
        
        String[][] Datos = new String[EnlaceRepetidas.Repetidas][2];
        for(int i=0;i<EnlaceRepetidas.Repetidas;i++){
            Actual=Estampas.SacarSiguiente(Actual);
            
            Datos[i][0]=""+Actual.ID;
            Datos[i][1]=""+ReporteUsuario1(Actual.ID);    
        }
       
       
        
        for (int j = 0; j < EnlaceRepetidas.Repetidas; j++) {

            for (int i = 0; i < EnlaceRepetidas.Repetidas - 1; i++) {
                if (Integer.parseInt(Datos[i][1]) < Integer.parseInt(Datos[i+1][1])) {
                    int Copia=Integer.parseInt(Datos[i][1]);
                    String CopiaS=Datos[i][0];

                    Datos[i][0]=Datos[i+1][0];
                    Datos[i][1]=Datos[i+1][1];
                    
                    Datos[i+1][0]=""+CopiaS;
                    Datos[i+1][1]=""+Copia;
                    
                    
                }
                
                

            }
            
        }
        
        
        
       
        
         Actual=null;
        
        NodoEquipos Actualidad=null;
        EnlaceEquipos Equipos = new EnlaceEquipos();
        String[][] DatosE = new String[EnlaceEquipos.CantidadEquipos+2][2+2];
        
        
        
        for(int i=0;i<EnlaceEquipos.CantidadEquipos;i++){
            Actualidad=Equipos.SacarSiguiente(Actualidad);
            
            DatosE[i][0]=""+Actualidad.Num;
            DatosE[i][1]=""+ReporteUsuario2(Actualidad.Num);    
        }
       
       
        
        for (int j = 0; j < EnlaceEquipos.CantidadEquipos; j++) {

            for (int i = 0; i < EnlaceEquipos.CantidadEquipos - 1; i++) {
                if (Integer.parseInt(DatosE[i][1]) < Integer.parseInt(DatosE[i+1][1])) {
                    int Copia=Integer.parseInt(DatosE[i][1]);
                    String CopiaS=DatosE[i][0];

                    DatosE[i][0]=DatosE[i+1][0];
                    DatosE[i][1]=DatosE[i+1][1];
                    
                    DatosE[i+1][0]=""+CopiaS;
                    DatosE[i+1][1]=""+Copia;
                    
                    
                }
                
                

            }
            
        }
        
        
        
        
        
        
        
        
        
        System.out.println("///////////////////////////");
        System.out.println("Top 5 Equipos con más Estampas");
         for(int i=0;i<EnlaceEquipos.CantidadEquipos;i++){
            System.out.println("Equipo "+DatosE[i][0]);
            System.out.println("Cantidad  "+DatosE[i][1]);
            
            
            }

         
         System.out.println("///////////////////////////");
        System.out.println("Top 5 Equipos con más Estampas");
         for(int i=EnlaceEquipos.CantidadEquipos-1;i>=0;i--){
            System.out.println("Equipo "+DatosE[i][0]);
            System.out.println("Cantidad  "+DatosE[i][1]);
            
            
            }
         


*/

      
    }//GEN-LAST:event_jButton10ActionPerformed
     int ReporteAdmin1(int Usuario){
         int valor=0;
    NodoRepetidas Imprimir=EnlaceRepetidas.Cuerpo.Siguiente;
    while(Imprimir.Siguiente!=EnlaceRepetidas.Cabeza){
       
        
        if((Imprimir.IDUsuario==Usuario)&&(Imprimir.Pegada.equals("1"))){valor=valor+1;}
        
        Imprimir=Imprimir.Siguiente;
    }
    
         
         return valor;
    } 
     
     
    int ReporteAdmin2(int Usuario){
         int valor=0;
    NodoRepetidas Imprimir=EnlaceRepetidas.Cuerpo.Siguiente;
    while(Imprimir.Siguiente!=EnlaceRepetidas.Cabeza){
       
        
        if((Imprimir.IDUsuario==Usuario)){valor=(valor+Imprimir.Cantidad+1);}
        
        Imprimir=Imprimir.Siguiente;
    }
    
         
         return valor;
    }  
    
    int ReporteUsuario1(int IDE){
     int valor=0;
    NodoRepetidas Imprimir=EnlaceRepetidas.Cuerpo.Siguiente;
    while(Imprimir.Siguiente!=EnlaceRepetidas.Cabeza){
       
        
        if((Imprimir.IDEstampas==IDE)){valor=(valor+Imprimir.Cantidad+1);}
        
        Imprimir=Imprimir.Siguiente;
    }
    
         
         return valor;
    }
    
    int ReporteUsuario2(int IDE){
     int valor=0;
    EnlaceEstampas Estampas = new EnlaceEstampas();
    NodoRepetidas Imprimir=EnlaceRepetidas.Cuerpo.Siguiente;
    while(Imprimir.Siguiente!=EnlaceRepetidas.Cabeza){
       
        int prueba;
        //NodoEstampas Estam=Estampas.DevolverEquipoEstampa(Imprimir.IDEstampas);
        prueba=Estampas.DevolverEquipoEstampa(Imprimir.IDEstampas);
        
        if((prueba==IDE)&&(Imprimir.Pegada.equals("1"))){valor=(valor+Imprimir.Cantidad+1);}
        
        Imprimir=Imprimir.Siguiente;
    }
    
         
         return valor;
    }
    
    private  NodoOrden SacarUsuariosInicio=null;
//Boton Anterior AdminUsuarios
    public boolean NumerosEnteros(String Num) {
        try {
            Integer.parseInt(Num);
        } catch (Exception pic) {
            return false;
        }
        return true;
    }

    public boolean LetrasNumEspacio(String H) {
        boolean verdad = true;
        char c;
        for (int j = 0; j < H.length(); j++) {
            H = H.trim();
            H = H.toLowerCase();
            for (int i = 97; i < 123; i++) {
                c = (char) i;
                if (H.charAt(j) == c) {
                    verdad = true;
                    break;
                } else {
                                      //  System.out.println((int) c);

                    verdad = false;
                }
            }
            //numeros
            if (verdad == false) {
                verdad = NumerosEnteros("" + H.charAt(j));
            }

            //espacio,ñ y raros
            if (verdad == false) {
                c = (char) 32;

                if ((H.charAt(j) == c) || (H.charAt(j) == ' ')|| (H.charAt(j) == (char)165) || (H.charAt(j) == (char) 65533) || (H.charAt(j) == (char) 130) || (H.charAt(j) == ' ')) {
                    verdad = true;


                }
            }
            
            if (verdad == false) {
                c = (char) 32;

                if ((H.charAt(j) == (char)237) ||((H.charAt(j) == (char)233))||((H.charAt(j) == (char)241))||((H.charAt(j) == (char)243))||((H.charAt(j) == (char)225))||((H.charAt(j) == (char)250))) {
                    verdad = true;

                }
            }
            
            if (verdad == false) {
                for (int i = 160; i < 166; i++) {
                    c = (char) i;
                    if ((int)H.charAt(j) == (int)c) {
                        verdad = true;
                        break;
                    } else {
                        System.out.println("HHHHHHHHHHHH");
                        System.out.println((int)H.charAt(j));
                        System.out.println(i);
                        verdad = false;

                    }
                }
            }
            if (verdad == false) {
                break;
            }
        }
        return verdad;
    }

    public boolean Exten(String hola) {
        for (int i = 0; i < 5; i++) {
            if (Extensiones[i].equals(hola)) {
                return true;
            }
        }
        return false;

    }

    public boolean Fecha(String k) {
        boolean estado;
        if (k.length() != 10) {
            return false;
        }
        estado = NumerosEnteros("" + k.charAt(0) + k.charAt(1));

        if (estado == false) {
            return false;
        }
        if ((k.charAt(2) == '/') && ((k.charAt(5) == '/'))) {
            estado = true;
        }

        if (estado == false) {
            return false;
        }
        estado = NumerosEnteros("" + k.charAt(3) + k.charAt(4));

        if (estado == false) {
            return false;
        }

        estado = NumerosEnteros("" + k.charAt(6) + k.charAt(7) + k.charAt(8) + k.charAt(9));

        return estado;

    }
    //Segunda
    
    public boolean Letras(String H ){
        
      boolean verdad = true;
        char c;
        for (int j = 0; j < H.length(); j++) {
            H = H.trim();
            H = H.toLowerCase();
            for (int i = 97; i < 123; i++) {
                c = (char) i;
                if (H.charAt(j) == c) {
                    verdad = true;
                    break;
                } else {
                    verdad = false;
                }
            }
            
            
            if (verdad == false) {

                if ((H.charAt(j) == (char)237) ||((H.charAt(j) == (char)233))||((H.charAt(j) == (char)241))||((H.charAt(j) == (char)243))||((H.charAt(j) == (char)225))||((H.charAt(j) == (char)250))) {
                    verdad = true;

                }
            }
            
            //espacio,ñ y raros tal 
            if (verdad == false) {
                c = (char) 32;

                if (   (H.charAt(j) == (char) 65533) || (H.charAt(j) == (char) 130) ) {
                    verdad = true;

                }
            }
            if (verdad == false) {
                for (int i = 160; i < 166; i++) {
                    c = (char) i;
                    if (H.charAt(j) == c) {
                        verdad = true;
                        break;
                    } else {
                        verdad = false;

                    }
                }
            }
            if (verdad == false) {
                
                break;
            }
        }
        
        return verdad;
    
    
    }
    
    public boolean LetrasEspacio(String H ){
     boolean verdad = true;
        char c;
        for (int j = 0; j < H.length(); j++) {
            H = H.trim();
            H = H.toLowerCase();
            for (int i = 97; i < 123; i++) {
                c = (char) i;
                if (H.charAt(j) == c) {
                    verdad = true;
                    break;
                } else {
                    verdad = false;
                }
            }
            
            
            if (verdad == false) {

                if ((H.charAt(j) == (char)237) ||((H.charAt(j) == (char)233))||((H.charAt(j) == (char)241))||((H.charAt(j) == (char)243))||((H.charAt(j) == (char)225))||((H.charAt(j) == (char)250))) {
                    verdad = true;

                }
            }
            
            //espacio,ñ y raros tal vez borrar guion
            if (verdad == false) {
                c = (char) 32;
                char de = (char) 39;

                if ((H.charAt(j) == de)||(H.charAt(j) == '-') ||(H.charAt(j) == c) || (H.charAt(j) == ' ') || (H.charAt(j) == (char) 65533) || (H.charAt(j) == (char) 130) || (H.charAt(j) == ' ')) {
                    verdad = true;

                }
            }
            if (verdad == false) {
                for (int i = 160; i < 166; i++) {
                    c = (char) i;
                    if (H.charAt(j) == c) {
                        verdad = true;
                        break;
                    } else {
                        verdad = false;

                    }
                }
            }
            if (verdad == false) {
                break;
            }
        }
        return verdad;
    
    
    }
    
    public boolean FlotantesCon2(String b){
    String[] a=b.split("\\.");
    if(a.length>2){return false;}    
        
    try{Float.parseFloat(b);}catch(Exception auy){return false;}return true;
    }
    //Tercera
    
    public boolean IDEstampas(String Numa){
        
        return NumerosEnteros(Numa)&&(Numa.length()==3);
    
    }
    public boolean IDEQ(int a){
        EnlaceEquipos Equipos = new EnlaceEquipos();
        return (!Equipos.Iguales(a))&&(NumerosEnteros(""+a));
    }
    public boolean IDJU(int a){
        EnlaceJugadores Equipos = new EnlaceJugadores();
        return (!Equipos.Iguales(a))&&(NumerosEnteros(""+a));
    }
    public boolean Rareza(String s){
        return s.equals("1")||s.equals("0");
     }
    //Cuarta
    
    public boolean IDUsuario(String a){
    if((a.length()!=4)||(!NumerosEnteros(a))){return false;}
    else{return true;}
    }
    public boolean Contrase(String H){
    char c=(char)32;
    boolean verdad=true;
    for (int j = 0; j < H.length(); j++) {
            H = H.trim();
            H = H.toLowerCase();
            if(H.charAt(j)=='|'||(H.charAt(j)==' ')||(H.charAt(j)==c)){return false;}
            
     }
    
    return verdad;
    }
    //Estampas-Usuarios
    public boolean CantidadPegada(String a,String b){
    int Cant=Integer.parseInt(b);
    if(((a.equals("1")&&(Cant>=1)))){return true;}
    
    if(a.equals("0")&&(Cant>-1)){return true;}else{return false;}
    
    
    }
    
    public static int Contador = 0;
    public String pos;
    //-------------------------Se obtiene el contenido del Archivo----------------//
    public String getArchivo(String ruta) {
        Contador=0;
        FileReader fr ;
        BufferedReader br = null,in=null;
        //Cadena de texto donde se guardara el contenido del archivo
        String contenido = "";
        try {
            //ruta puede ser de tipo String o tipo File
            
            fr = new FileReader (ruta);
            pos=ruta;
            br = new BufferedReader(fr);
            
            in = new BufferedReader(
		   new InputStreamReader(
                      new FileInputStream(ruta), "ISO-8859-1"));
            
            String linea;
            //Obtenemos el contenido del archivo linea por linea
            while ((linea = in.readLine()) != null) {
                Contador++;
                contenido += linea + "\n";
            }

        } catch (Exception e) {
        } //finally se utiliza para que si todo ocurre correctamente o si ocurre 
        //algun error se cierre el archivo que anteriormente abrimos
        finally {
            try {
                in.close();
                br.close();
            } catch (Exception ex) {
            }
        }
        return contenido;
    }
    //-----------------------------------------------------------------------------//

    JTextPane txp;
    JFileChooser abrirArchivo;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CargarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CargarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CargarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CargarDatos().setVisible(true);

                try {
                    //Cambiamos el Look&Feel
                    // JFrame.setDefaultLookAndFeelDecorated( true );
                    // UIManager.setLookAndFeel( new com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel() );
                } catch (Exception e) {
                }
                //new AbrirArchivoTexto();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
